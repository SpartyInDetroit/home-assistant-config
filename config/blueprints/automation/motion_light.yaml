blueprint:
  name: Motion-activated Light
  description: >-
    Turn on a light when motion is detected.

    Lights turn off after a period of no motion.
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 120
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
    # always_run:
    #   name: Always run
    #   description: Ignore conditions
    #   default: false
    #   selector:
    #     boolean:

# variable:
#   always_run: !input always_run

# If motion is detected within the delay,
# we restart the script.
mode: restart
max_exceeded: silent

trigger:
  platform: state
  entity_id: !input motion_entity
  from: "off"
  to: "on"

condition:
  - condition: or
    conditions:
      # - condition: template
      #   value_template: "{{ always_run }}"
      - condition: template
        alias: "Sun down"
        value_template: "{{ state_attr('sun.sun', 'elevation') < 4 }}"
      - condition: state
        alias: "Kitchen Light is On" # in case it's dark outside and the kitchen light is turned on
        entity_id: light.kitchen_light_1
        state: "on"
      - condition: numeric_state
        alias: "Ambient light is low"
        entity_id: sensor.kitchen_motion_sensor_light_level
        below: 25

action:
  - alias: "Turn on the light"
    service: light.turn_on
    target: !input light_target
  - alias: "Wait until there is no motion from device"
    wait_for_trigger:
      platform: state
      entity_id: !input motion_entity
      from: "on"
      to: "off"
  - alias: "Wait the number of seconds that has been set"
    delay: !input no_motion_wait
  - alias: "Turn off the light"
    service: light.turn_off
    target: !input light_target
